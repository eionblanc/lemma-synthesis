do not print !
; comment


(synth-fun lemma ((x Int) (y Int)) Bool
           ((Start Bool) (B1 Bool) (B2 Bool) (B3 Bool) (Loc Int))

           ((Start Bool (
                  (=> B1 (and B2 B3))))
           (B1 Bool
                  ((member Loc (hbst Loc))))
          (B2 Bool
                  ((<= (key Loc) (maxr Loc))))
           (B3 Bool
                  ((<= (minr Loc) (key Loc))))
           (Loc Int (x
                     y))

))

( testing )
this should not appear
; neither should this


(synth-fun lemma ((x Int) (y Int)) Bool
           ((Start Bool) (B1 Bool) (B2 Bool) (I Int) (Loc Int))

           ((Start Bool (
                  B1
                  (=> B1 B2)))
           (B1 Bool (
                  (<= I I)
                  (bst Loc)))
           (B2 Bool (
                  (= x k)))
           (I Int (
                  (minr Loc)
                  (maxr Loc)
                  k))
           (Loc Int (
                  x
                  y
                  (lft x)
                  (rght x))))
)



; third grammar

(synth-fun lemma ((x Int) (y Int) (z Int)) Bool
           ((Start Bool) (B1 Bool) (B2 Bool) (B3 Bool) (Loc Int))

           ((Start Bool (
                  (=> B1 (and B2 B3))))
           (B1 Bool
                  ((member Loc (hbst Loc))))
          (B2 Bool
                  ((<= (* 3 (key Loc)) (maxr Loc))))
           (B3 Bool
                  ((<= (minr Loc) (key Loc))))
           (Loc Int (x
                     (+ (lft z) z)
                     y))

))






(check-sat)